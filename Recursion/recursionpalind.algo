FUNCTION IsPalindromeWord(word: STRING; left,right:INTEGER): boolean;

BEGIN
  // Initialize pointers
   

  // Compare characters from both ends
    WHILE (left <= right) DO
  
    // If characters are different, it's not a palindrome
        IF (word[left] <> word[right]) THEN
   
            RETURN false;
            // Move pointers towards the center
            END_IF
         IsPalindromeWord(word,left+1, right-1);
    END_WHILE
     // If the loop completes, it's a palindrome
    RETURN true;
END    
  

ALGORITHM IsPalindrome 
VAR
    inputWord: STRING;
     left:INTEGER := 0;
    right:INTEGER := inputWord.Length;
BEGIN
    // Read input from the user
    WRITE("Enter a word: ");
    READ(inputWord);
    // Check if the input word is a palindrome
    IF (IsPalindromeWord(inputWord,left,right)) THEN
        WRITE(inputWord, " is a palindrome.");
    ELSE
        WRITE(inputWord, " is not a palindrome.");
    END_IF
END 

